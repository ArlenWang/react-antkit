{"ast":null,"code":"/**\r\n * 请求网络封装\r\n */\nimport 'whatwg-fetch';\n\nconst get = (url, successCallBack, failCallBack) => {\n  // console.log(url);\n  return window.fetch(url).then(function (response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response.json();\n    } else {\n      failCallBack(response);\n    }\n  }).then(function (json) {\n    successCallBack(json);\n  }).catch(function (ex) {\n    failCallBack(ex);\n  });\n}; //let jsonata=JSON.parse(data);\n\n\nconst getStr = (url, successCallBack, failCallBack) => {\n  return window.fetch(url).then(function (response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response.text();\n    } else {\n      failCallBack(response);\n    }\n  }).then(function (str) {\n    successCallBack(str);\n  }).catch(function (ex) {\n    failCallBack(ex);\n  });\n};\n\nconst getnocors = (url, successCallBack, failCallBack) => {\n  // console.log(url);\n  return window.fetch(url, {\n    method: \"GET\",\n    mode: \"no-cors\" //可以在这设置跨域\n\n  }).then(function (response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response.json();\n    } else {\n      failCallBack(response);\n    }\n  }).then(function (json) {\n    successCallBack(json);\n  }).catch(function (ex) {\n    failCallBack(ex);\n  });\n};\n\nconst getSagasNocors = url => {\n  return window.fetch(url, {\n    method: \"GET\",\n    mode: \"no-cors\" //可以在这设置跨域\n\n  }).then(function (response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response.json();\n    } else {\n      return {\n        response\n      };\n    }\n  }).then(function (json) {\n    return {\n      response: json\n    };\n  }).catch(function (ex) {\n    return {\n      ex\n    };\n  });\n};\n\nconst getSagas = url => {\n  return window.fetch(url).then(function (response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response.json();\n    } else {\n      return {\n        response\n      };\n    }\n  }).then(function (json) {\n    return {\n      response: json\n    };\n  }).catch(function (ex) {\n    return {\n      ex\n    };\n  });\n};\n\nconst postSagas = (url, body) => {\n  return window.fetch(url, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n    },\n    body: body //body: body\n\n  }).then(function (response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response.json();\n    } else {\n      return {\n        response\n      };\n    }\n  }).then(function (json) {\n    return {\n      response: json\n    };\n  }).catch(function (ex) {\n    return {\n      ex\n    };\n  });\n};\n/**\r\n * php要调用$_POST['xx']\r\n * body 格式是字符串 xx=x&xxx=oo\r\n */\n\n\nconst post = (url, body, successCallBack, failCallBack) => {\n  return window.fetch(url, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n    },\n    body: body\n  }).then(function (response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response.json();\n    } else {\n      failCallBack(response);\n    }\n  }).then(function (json) {\n    successCallBack(json);\n  }).catch(function (ex) {\n    failCallBack(ex);\n  });\n};\n/**\r\n * php要调用file_get_contents('php://input');或so读取 files::read_file(\"php://input\")\r\n * body 格式是object{}\r\n */\n\n\nconst postJson = (url, body, successCallBack, failCallBack) => {\n  return window.fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  }).then(function (response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response.json();\n    } else {\n      failCallBack(response);\n    }\n  }).then(function (json) {\n    successCallBack(json);\n  }).catch(function (ex) {\n    failCallBack(ex);\n  });\n};\n/**\r\n * @param url               请求网址\r\n * var input = document.querySelector('input[type=\"file\"]');\r\n * var data = new FormData();\r\n * data.append('file', input.files[0]);\r\n * data.append('user', 'hubot');\r\n */\n\n\nconst upload = (url, body, successCallBack, failCallBack) => {\n  return window.fetch(url, {\n    method: 'POST',\n    body: body\n  }).then(function (response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response.json();\n    } else {\n      failCallBack(response);\n    }\n  }).then(function (json) {\n    successCallBack(json);\n  }).catch(function (ex) {\n    failCallBack(ex);\n  });\n};\n\nconst download = (url, fileName) => {\n  //只支持本地\n  return window.fetch(url).then(function (response) {\n    response.blob().then(blob => {\n      var url = window.URL.createObjectURL(blob); // 获取 blob 本地文件连接 (blob 为纯二进制对象，不能够直接保存到磁盘上)    \n\n      var a = document.createElement('a');\n      a.href = url;\n      a.download = decodeURIComponent(fileName);\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(function () {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }, 1000); //var reader = new FileReader();\n      //reader.readAsDataURL(blob);\n      //reader. = function (e) {\n      //    var a = document.createElement('a');\n      //    a.download =decodeURIComponent(fileName);\n      //    a.href = e.target.result;\n      //    a.click();\n      //}\n    });\n  }).catch(function (ex) {\n    console.log(ex);\n  });\n};\n\nconst remotedownload = (url, fileName) => {\n  return window.fetch(url, {\n    method: \"GET\" //     mode: \"no-cors\",//可以在这设置跨域但下载文件为空\n\n  }).then(function (response) {\n    response.blob().then(blob => {\n      var url = window.URL.createObjectURL(blob); // 获取 blob 本地文件连接 (blob 为纯二进制对象，不能够直接保存到磁盘上)    \n\n      var a = document.createElement('a');\n      a.href = url;\n      a.download = decodeURIComponent(fileName);\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(function () {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }, 1000);\n    });\n  }).catch(function (ex) {\n    console.log(ex);\n  });\n};\n\nexport { get, getStr, post, getSagas, postSagas, postJson, upload, download, remotedownload, getnocors, getSagasNocors };","map":{"version":3,"sources":["/Users/mljfnn/Desktop/demos/react/antkit/src/utils/NetWorking.js"],"names":["get","url","successCallBack","failCallBack","window","fetch","then","response","status","json","catch","ex","getStr","text","str","getnocors","method","mode","getSagasNocors","getSagas","postSagas","body","headers","post","postJson","JSON","stringify","upload","download","fileName","blob","URL","createObjectURL","a","document","createElement","href","decodeURIComponent","appendChild","click","setTimeout","removeChild","revokeObjectURL","console","log","remotedownload"],"mappings":"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","sourcesContent":["/**\r\n * 请求网络封装\r\n */\r\nimport 'whatwg-fetch'\r\n\r\nconst get=(url,successCallBack,failCallBack) =>{\r\n       // console.log(url);\r\n        return window.fetch(url)\r\n        .then(function(response) {\r\n            if (response.status >= 200 && response.status < 300) {\r\n                 return response.json();\r\n            }else{\r\n                failCallBack(response);\r\n            }\r\n        })\r\n        .then(function(json) {\r\n            successCallBack(json);\r\n        })\r\n        .catch(function(ex) {\r\n            failCallBack(ex);\r\n        });\r\n    }\r\n\r\n    //let jsonata=JSON.parse(data);\r\nconst getStr=(url,successCallBack,failCallBack) =>{\r\n         return window.fetch(url)\r\n         .then(function(response) {\r\n             if (response.status >= 200 && response.status < 300) {\r\n                  return response.text();\r\n             }else{\r\n                 failCallBack(response);\r\n             }\r\n         })\r\n         .then(function(str) {\r\n             successCallBack(str);\r\n         })\r\n         .catch(function(ex) {\r\n             failCallBack(ex);\r\n         });\r\n     }\r\n   \r\nconst getnocors=(url,successCallBack,failCallBack) =>{\r\n        // console.log(url);\r\n         return window.fetch(url,{\r\n            method: \"GET\",\r\n            mode: \"no-cors\",//可以在这设置跨域\r\n        })\r\n         .then(function(response) {\r\n             if (response.status >= 200 && response.status < 300) {\r\n                  return response.json();\r\n             }else{\r\n                 failCallBack(response);\r\n             }\r\n         })\r\n         .then(function(json) {\r\n             successCallBack(json);\r\n         })\r\n         .catch(function(ex) {\r\n             failCallBack(ex);\r\n         });\r\n }\r\n const  getSagasNocors=(url) =>{\r\n    return window.fetch(url,{\r\n        method: \"GET\",\r\n        mode: \"no-cors\",//可以在这设置跨域\r\n    })\r\n    .then(function(response) {\r\n        if (response.status >= 200 && response.status < 300) {\r\n           return response.json();\r\n        }else{\r\n           return {response};\r\n        }\r\n    })\r\n    .then(function(json) {\r\n       return {response:json};\r\n     })\r\n     .catch(function(ex) {\r\n       return {ex};\r\n    });\r\n\r\n}\r\nconst  getSagas=(url) =>{\r\n         return window.fetch(url)\r\n         .then(function(response) {\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.json();\r\n             }else{\r\n                return {response};\r\n             }\r\n         })\r\n         .then(function(json) {\r\n            return {response:json};\r\n          })\r\n          .catch(function(ex) {\r\n            return {ex};\r\n         });\r\n \r\n     }\r\n\r\n const  postSagas=(url,body) =>{\r\n        return window.fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n            },\r\n           body: body\r\n           //body: body\r\n          })\r\n          .then(function(response) {\r\n            if (response.status >= 200 && response.status < 300) {\r\n                 return response.json();\r\n            }else{\r\n                return {response};\r\n            }\r\n        }).then(function(json) {\r\n            return {response:json};\r\n        }).catch(function(ex) {\r\n            return {ex};\r\n        });\r\n    }\r\n    /**\r\n     * php要调用$_POST['xx']\r\n     * body 格式是字符串 xx=x&xxx=oo\r\n     */\r\n const   post=(url, body, successCallBack, failCallBack) =>{\r\n        return window.fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n            },\r\n            body: body\r\n          })\r\n          .then(function(response) {\r\n            if (response.status >= 200 && response.status < 300) {\r\n                 return response.json();\r\n            }else{\r\n                failCallBack(response);\r\n            }\r\n        }).then(function(json) {\r\n            successCallBack(json);\r\n        }).catch(function(ex) {\r\n            failCallBack(ex);\r\n        });\r\n    }\r\n    /**\r\n     * php要调用file_get_contents('php://input');或so读取 files::read_file(\"php://input\")\r\n     * body 格式是object{}\r\n     */\r\nconst   postJson=(url, body, successCallBack, failCallBack) =>{\r\n        return window.fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n          .then(function(response) {\r\n            if (response.status >= 200 && response.status < 300) {\r\n                 return response.json();\r\n            }else{\r\n                failCallBack(response);\r\n            }\r\n        }).then(function(json) {\r\n            successCallBack(json);\r\n        }).catch(function(ex) {\r\n            failCallBack(ex);\r\n        });\r\n    }\r\n  \r\n    /**\r\n     * @param url               请求网址\r\n     * var input = document.querySelector('input[type=\"file\"]');\r\n     * var data = new FormData();\r\n     * data.append('file', input.files[0]);\r\n     * data.append('user', 'hubot');\r\n     */\r\nconst   upload=(url,body,successCallBack,failCallBack) => {\r\n        return window.fetch(url, {\r\n            method: 'POST',\r\n            body: body\r\n          })\r\n          .then(function(response) {\r\n            if (response.status >= 200 && response.status < 300) {\r\n                 return response.json();\r\n            }else{\r\n                failCallBack(response);\r\n            }\r\n        }).then(function(json) {\r\n            successCallBack(json);\r\n        }).catch(function(ex) {\r\n            failCallBack(ex);\r\n        });\r\n    }\r\n\r\nconst download=(url,fileName)=>{//只支持本地\r\n    return window.fetch(url)\r\n    .then(function(response) {\r\n        response.blob().then(blob=>{\r\n            var url = window.URL.createObjectURL(blob);   // 获取 blob 本地文件连接 (blob 为纯二进制对象，不能够直接保存到磁盘上)    \r\n            var a = document.createElement('a'); \r\n            a.href = url; \r\n            a.download = decodeURIComponent(fileName); \r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function(){\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            },1000);\r\n            //var reader = new FileReader();\r\n            //reader.readAsDataURL(blob);\r\n            //reader. = function (e) {\r\n            //    var a = document.createElement('a');\r\n            //    a.download =decodeURIComponent(fileName);\r\n            //    a.href = e.target.result;\r\n            //    a.click();\r\n            //}\r\n        });\r\n    \r\n    })\r\n    .catch(function(ex) {\r\n        console.log(ex);\r\n    });\r\n}\r\n\r\nconst remotedownload=(url,fileName)=>{\r\n    return window.fetch(url,{\r\n        method: \"GET\",\r\n   //     mode: \"no-cors\",//可以在这设置跨域但下载文件为空\r\n    })\r\n      .then(function(response) {\r\n        response.blob().then(blob=>{\r\n            var url = window.URL.createObjectURL(blob);   // 获取 blob 本地文件连接 (blob 为纯二进制对象，不能够直接保存到磁盘上)    \r\n            var a = document.createElement('a'); \r\n            a.href = url; \r\n            a.download = decodeURIComponent(fileName); \r\n            document.body.appendChild(a);\r\n            a.click();\r\n            setTimeout(function(){\r\n                document.body.removeChild(a);\r\n                window.URL.revokeObjectURL(url);\r\n            },1000);\r\n           \r\n        });\r\n    \r\n    })\r\n    .catch(function(ex) {\r\n        console.log(ex);\r\n    });\r\n}\r\n\r\nexport {\r\n    get,\r\n    getStr,\r\n    post,\r\n    getSagas,\r\n    postSagas,\r\n    postJson,\r\n    upload,\r\n    download,\r\n    remotedownload,\r\n    getnocors,\r\n    getSagasNocors\r\n};"]},"metadata":{},"sourceType":"module"}