{"ast":null,"code":"import \"antd-mobile/lib/pull-to-refresh/style/css\";\nimport _PullToRefresh from \"antd-mobile/lib/pull-to-refresh\";\nimport \"antd-mobile/lib/button/style/css\";\nimport _Button from \"antd-mobile/lib/button\";\nimport \"antd-mobile/lib/list-view/style/css\";\nimport _ListView from \"antd-mobile/lib/list-view\";\nvar _jsxFileName = \"/Users/mljfnn/Desktop/demos/react/antkit/src/views/Demos/ListViewDemo.jsx\";\nconst data = [{\n  img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\n  title: 'Meet hotel',\n  des: '不是所有的兼职汪都需要风吹日晒'\n}, {\n  img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\n  title: 'McDonald\\'s invites you',\n  des: '不是所有的兼职汪都需要风吹日晒'\n}, {\n  img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\n  title: 'Eat the week',\n  des: '不是所有的兼职汪都需要风吹日晒'\n}];\nconst NUM_ROWS = 20;\nlet pageIndex = 0;\n\nfunction genData(pIndex = 0) {\n  const dataArr = [];\n\n  for (let i = 0; i < NUM_ROWS; i++) {\n    dataArr.push(\"row - \".concat(pIndex * NUM_ROWS + i));\n  }\n\n  return dataArr;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onRefresh = () => {\n      this.setState({\n        refreshing: true,\n        isLoading: true\n      }); // simulate initial Ajax\n\n      setTimeout(() => {\n        this.rData = genData();\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(this.rData),\n          refreshing: false,\n          isLoading: false\n        });\n      }, 600);\n    };\n\n    this.onEndReached = event => {\n      // load new data\n      // hasMore: from backend data, indicates whether it is the last page, here is false\n      if (this.state.isLoading && !this.state.hasMore) {\n        return;\n      }\n\n      console.log('reach end', event);\n      this.setState({\n        isLoading: true\n      });\n      setTimeout(() => {\n        this.rData = [...this.rData, ...genData(++pageIndex)];\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(this.rData),\n          isLoading: false\n        });\n      }, 1000);\n    };\n\n    const dataSource = new _ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2\n    });\n    this.state = {\n      dataSource,\n      refreshing: true,\n      isLoading: true,\n      height: document.documentElement.clientHeight,\n      useBodyScroll: false\n    };\n  } // If you use redux, the data maybe at props, you need use `componentWillReceiveProps`\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.dataSource !== this.props.dataSource) {\n  //     this.setState({\n  //       dataSource: this.state.dataSource.cloneWithRows(nextProps.dataSource),\n  //     });\n  //   }\n  // }\n\n\n  componentDidUpdate() {\n    if (this.state.useBodyScroll) {\n      document.body.style.overflow = 'auto';\n    } else {\n      document.body.style.overflow = 'hidden';\n    }\n  }\n\n  componentDidMount() {\n    const hei = this.state.height - ReactDOM.findDOMNode(this.lv).offsetTop;\n    setTimeout(() => {\n      this.rData = genData();\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(genData()),\n        height: hei,\n        refreshing: false,\n        isLoading: false\n      });\n    }, 1500);\n  }\n\n  render() {\n    const separator = (sectionID, rowID) => React.createElement(\"div\", {\n      key: \"\".concat(sectionID, \"-\").concat(rowID),\n      style: {\n        backgroundColor: '#F5F5F9',\n        height: 8,\n        borderTop: '1px solid #ECECED',\n        borderBottom: '1px solid #ECECED'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    });\n\n    let index = data.length - 1;\n\n    const row = (rowData, sectionID, rowID) => {\n      if (index < 0) {\n        index = data.length - 1;\n      }\n\n      const obj = data[index--];\n      return React.createElement(\"div\", {\n        key: rowID,\n        style: {\n          padding: '0 15px',\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: '50px',\n          lineHeight: '50px',\n          color: '#888',\n          fontSize: '18px',\n          borderBottom: '1px solid #ddd'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, obj.title), React.createElement(\"div\", {\n        style: {\n          display: '-webkit-box',\n          display: 'flex',\n          padding: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          height: '63px',\n          width: '63px',\n          marginRight: '15px'\n        },\n        src: obj.img,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginBottom: '8px',\n          color: '#000',\n          fontSize: '16px',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          maxWidth: '250px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, obj.des, \"-\", rowData), React.createElement(\"div\", {\n        style: {\n          fontSize: '16px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: '30px',\n          color: '#FF6E27'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, rowID), \" \\u5143/\\u4EFB\\u52A1\"))));\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      style: {\n        margin: '30px 15px'\n      },\n      inline: true,\n      onClick: () => this.setState({\n        useBodyScroll: !this.state.useBodyScroll\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.state.useBodyScroll ? 'useBodyScroll' : 'partial scroll'), React.createElement(_ListView, {\n      key: this.state.useBodyScroll ? '0' : '1',\n      ref: el => this.lv = el,\n      dataSource: this.state.dataSource,\n      renderHeader: () => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Pull to refresh\"),\n      renderFooter: () => React.createElement(\"div\", {\n        style: {\n          padding: 30,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.state.isLoading ? 'Loading...' : 'Loaded'),\n      renderRow: row,\n      renderSeparator: separator,\n      useBodyScroll: this.state.useBodyScroll,\n      style: this.state.useBodyScroll ? {} : {\n        height: this.state.height,\n        border: '1px solid #ddd',\n        margin: '5px 0'\n      },\n      pullToRefresh: React.createElement(_PullToRefresh, {\n        refreshing: this.state.refreshing,\n        onRefresh: this.onRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }),\n      onEndReached: this.onEndReached,\n      pageSize: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mljfnn/Desktop/demos/react/antkit/src/views/Demos/ListViewDemo.jsx"],"names":["data","img","title","des","NUM_ROWS","pageIndex","genData","pIndex","dataArr","i","push","App","React","Component","constructor","props","onRefresh","setState","refreshing","isLoading","setTimeout","rData","dataSource","state","cloneWithRows","onEndReached","event","hasMore","console","log","DataSource","rowHasChanged","row1","row2","height","document","documentElement","clientHeight","useBodyScroll","componentDidUpdate","body","style","overflow","componentDidMount","hei","ReactDOM","findDOMNode","lv","offsetTop","render","separator","sectionID","rowID","backgroundColor","borderTop","borderBottom","index","length","row","rowData","obj","padding","lineHeight","color","fontSize","display","width","marginRight","marginBottom","textOverflow","whiteSpace","maxWidth","margin","el","textAlign","border"],"mappings":"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","sourcesContent":["import { PullToRefresh, ListView, Button } from 'antd-mobile';\n\nconst data = [\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\n    title: 'Meet hotel',\n    des: '不是所有的兼职汪都需要风吹日晒',\n  },\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\n    title: 'McDonald\\'s invites you',\n    des: '不是所有的兼职汪都需要风吹日晒',\n  },\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\n    title: 'Eat the week',\n    des: '不是所有的兼职汪都需要风吹日晒',\n  },\n];\nconst NUM_ROWS = 20;\nlet pageIndex = 0;\n\nfunction genData(pIndex = 0) {\n  const dataArr = [];\n  for (let i = 0; i < NUM_ROWS; i++) {\n    dataArr.push(`row - ${(pIndex * NUM_ROWS) + i}`);\n  }\n  return dataArr;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2,\n    });\n\n    this.state = {\n      dataSource,\n      refreshing: true,\n      isLoading: true,\n      height: document.documentElement.clientHeight,\n      useBodyScroll: false,\n    };\n  }\n\n  // If you use redux, the data maybe at props, you need use `componentWillReceiveProps`\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.dataSource !== this.props.dataSource) {\n  //     this.setState({\n  //       dataSource: this.state.dataSource.cloneWithRows(nextProps.dataSource),\n  //     });\n  //   }\n  // }\n\n  componentDidUpdate() {\n    if (this.state.useBodyScroll) {\n      document.body.style.overflow = 'auto';\n    } else {\n      document.body.style.overflow = 'hidden';\n    }\n  }\n\n  componentDidMount() {\n    const hei = this.state.height - ReactDOM.findDOMNode(this.lv).offsetTop;\n\n    setTimeout(() => {\n      this.rData = genData();\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(genData()),\n        height: hei,\n        refreshing: false,\n        isLoading: false,\n      });\n    }, 1500);\n  }\n\n  onRefresh = () => {\n    this.setState({ refreshing: true, isLoading: true });\n    // simulate initial Ajax\n    setTimeout(() => {\n      this.rData = genData();\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.rData),\n        refreshing: false,\n        isLoading: false,\n      });\n    }, 600);\n  };\n\n  onEndReached = (event) => {\n    // load new data\n    // hasMore: from backend data, indicates whether it is the last page, here is false\n    if (this.state.isLoading && !this.state.hasMore) {\n      return;\n    }\n    console.log('reach end', event);\n    this.setState({ isLoading: true });\n    setTimeout(() => {\n      this.rData = [...this.rData, ...genData(++pageIndex)];\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.rData),\n        isLoading: false,\n      });\n    }, 1000);\n  };\n\n  render() {\n    const separator = (sectionID, rowID) => (\n      <div\n        key={`${sectionID}-${rowID}`}\n        style={{\n          backgroundColor: '#F5F5F9',\n          height: 8,\n          borderTop: '1px solid #ECECED',\n          borderBottom: '1px solid #ECECED',\n        }}\n      />\n    );\n    let index = data.length - 1;\n    const row = (rowData, sectionID, rowID) => {\n      if (index < 0) {\n        index = data.length - 1;\n      }\n      const obj = data[index--];\n      return (\n        <div key={rowID}\n          style={{\n            padding: '0 15px',\n            backgroundColor: 'white',\n          }}\n        >\n          <div style={{ height: '50px', lineHeight: '50px', color: '#888', fontSize: '18px', borderBottom: '1px solid #ddd' }}>\n            {obj.title}\n          </div>\n          <div style={{ display: '-webkit-box', display: 'flex', padding: '15px' }}>\n            <img style={{ height: '63px', width: '63px', marginRight: '15px' }} src={obj.img} alt=\"\" />\n            <div style={{ display: 'inline-block' }}>\n              <div style={{ marginBottom: '8px', color: '#000', fontSize: '16px', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', maxWidth: '250px' }}>{obj.des}-{rowData}</div>\n              <div style={{ fontSize: '16px' }}><span style={{ fontSize: '30px', color: '#FF6E27' }}>{rowID}</span> 元/任务</div>\n            </div>\n          </div>\n        </div>\n      );\n    };\n    return (<div>\n      <Button\n        style={{ margin: '30px 15px' }}\n        inline\n        onClick={() => this.setState({ useBodyScroll: !this.state.useBodyScroll })}\n      >\n        {this.state.useBodyScroll ? 'useBodyScroll' : 'partial scroll'}\n      </Button>\n      <ListView\n        key={this.state.useBodyScroll ? '0' : '1'}\n        ref={el => this.lv = el}\n        dataSource={this.state.dataSource}\n        renderHeader={() => <span>Pull to refresh</span>}\n        renderFooter={() => (<div style={{ padding: 30, textAlign: 'center' }}>\n          {this.state.isLoading ? 'Loading...' : 'Loaded'}\n        </div>)}\n        renderRow={row}\n        renderSeparator={separator}\n        useBodyScroll={this.state.useBodyScroll}\n        style={this.state.useBodyScroll ? {} : {\n          height: this.state.height,\n          border: '1px solid #ddd',\n          margin: '5px 0',\n        }}\n        pullToRefresh={<PullToRefresh\n          refreshing={this.state.refreshing}\n          onRefresh={this.onRefresh}\n        />}\n        onEndReached={this.onEndReached}\n        pageSize={5}\n      />\n    </div>);\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}