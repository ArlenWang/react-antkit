{"ast":null,"code":"import \"antd-mobile/lib/list-view/style/css\";\nimport _ListView from \"antd-mobile/lib/list-view\";\nvar _jsxFileName = \"/Users/mljfnn/Desktop/demos/react/antkit/src/views/Indexb.jsx\";\nimport React from 'react';\nimport SearchTop from '../components/SearchTop.jsx';\nimport TabsTop from '../components/TabsTop.jsx';\nimport DropMenu from '../components/DropMenu.jsx';\nimport TwoItem from '../components/TwoItem.jsx';\nimport ThreeItem from '../components/ThreeItem.jsx';\nimport FourItem from '../components/FourItem.jsx';\nimport { api } from '../config/Api';\nimport { get } from '../utils/NetWorking';\n\nconst EmptyList = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(TwoItem, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}), React.createElement(ThreeItem, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}), React.createElement(FourItem, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}));\n\nfunction MyBody(props) {\n  return React.createElement(\"div\", {\n    className: \"am-list-body my-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"you can custom body wrap element\"), props.children);\n}\n\nconst data = [{\n  img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\n  title: 'Meet hotel',\n  des: '不是所有的兼职汪都需要风吹日晒'\n}, {\n  img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\n  title: 'McDonald\\'s invites you',\n  des: '不是所有的兼职汪都需要风吹日晒'\n}, {\n  img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\n  title: 'Eat the week',\n  des: '不是所有的兼职汪都需要风吹日晒'\n}];\nconst NUM_SECTIONS = 5;\nconst NUM_ROWS_PER_SECTION = 5;\nlet pageIndex = 0;\nconst dataBlobs = {};\nlet sectionIDs = [];\nlet rowIDs = [];\n\nfunction genData(pIndex = 0) {\n  for (let i = 0; i < NUM_SECTIONS; i++) {\n    const ii = pIndex * NUM_SECTIONS + i;\n    const sectionName = \"Section \".concat(ii);\n    sectionIDs.push(sectionName);\n    dataBlobs[sectionName] = sectionName;\n    rowIDs[ii] = [];\n\n    for (let jj = 0; jj < NUM_ROWS_PER_SECTION; jj++) {\n      const rowName = \"S\".concat(ii, \", R\").concat(jj);\n      rowIDs[ii].push(rowName);\n      dataBlobs[rowName] = rowName;\n    }\n  }\n\n  sectionIDs = [...sectionIDs];\n  rowIDs = [...rowIDs];\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onEndReached = event => {\n      // load new data\n      // hasMore: from backend data, indicates whether it is the last page, here is false\n      if (this.state.isLoading && !this.state.hasMore) {\n        return;\n      }\n\n      console.log('reach end', event);\n      this.setState({\n        isLoading: true\n      });\n      setTimeout(() => {\n        genData(++pageIndex);\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRowsAndSections(dataBlobs, sectionIDs, rowIDs),\n          isLoading: false\n        });\n      }, 1000);\n    };\n\n    const getSectionData = (dataBlob, sectionID) => dataBlob[sectionID];\n\n    const getRowData = (dataBlob, sectionID, rowID) => dataBlob[rowID];\n\n    const dataSource = new _ListView.DataSource({\n      getRowData,\n      getSectionHeaderData: getSectionData,\n      rowHasChanged: (row1, row2) => row1 !== row2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2\n    });\n    this.state = {\n      dataSource,\n      isLoading: true,\n      height: document.documentElement.clientHeight * 3 / 4\n    };\n  }\n\n  componentDidMount() {\n    this.getListdata();\n    const hei = document.documentElement.clientHeight - ReactDOM.findDOMNode(this.lv).parentNode.offsetTop; // simulate initial Ajax\n\n    setTimeout(() => {\n      genData();\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRowsAndSections(dataBlobs, sectionIDs, rowIDs),\n        isLoading: false,\n        height: hei\n      });\n    }, 600);\n  }\n\n  getListdata() {\n    let thisUrl = api.index_list;\n    get(thisUrl, res => {\n      console.log(res);\n    }, erro => {\n      console.log(erro);\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          history = _this$props.history,\n          location = _this$props.location;\n    const pageProps = {\n      history,\n      location\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(SearchTop, Object.assign({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(TabsTop, Object.assign({\n      activeid: 0\n    }, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(DropMenu, Object.assign({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), this.state.dataSource && this.state.dataSource.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"\\u6709\\u6570\\u636E\") : React.createElement(EmptyList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mljfnn/Desktop/demos/react/antkit/src/views/Indexb.jsx"],"names":["React","SearchTop","TabsTop","DropMenu","TwoItem","ThreeItem","FourItem","api","get","EmptyList","MyBody","props","display","children","data","img","title","des","NUM_SECTIONS","NUM_ROWS_PER_SECTION","pageIndex","dataBlobs","sectionIDs","rowIDs","genData","pIndex","i","ii","sectionName","push","jj","rowName","App","Component","constructor","onEndReached","event","state","isLoading","hasMore","console","log","setState","setTimeout","dataSource","cloneWithRowsAndSections","getSectionData","dataBlob","sectionID","getRowData","rowID","DataSource","getSectionHeaderData","rowHasChanged","row1","row2","sectionHeaderHasChanged","s1","s2","height","document","documentElement","clientHeight","componentDidMount","getListdata","hei","ReactDOM","findDOMNode","lv","parentNode","offsetTop","thisUrl","index_list","res","erro","render","history","location","pageProps","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchTop from '../components/SearchTop.jsx';\nimport TabsTop from '../components/TabsTop.jsx';\nimport DropMenu from '../components/DropMenu.jsx';\nimport TwoItem from '../components/TwoItem.jsx';\nimport ThreeItem from '../components/ThreeItem.jsx';\nimport FourItem from '../components/FourItem.jsx';\nimport {api} from '../config/Api';\nimport {get} from '../utils/NetWorking';\nimport { ListView } from 'antd-mobile';\nconst EmptyList=()=>(<div><TwoItem/><ThreeItem/><FourItem/></div>)\nfunction MyBody(props) {\n  return (\n    <div className=\"am-list-body my-body\">\n      <span style={{ display: 'none' }}>you can custom body wrap element</span>\n      {props.children}\n    </div>\n  );\n}\n\nconst data = [\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\n    title: 'Meet hotel',\n    des: '不是所有的兼职汪都需要风吹日晒',\n  },\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\n    title: 'McDonald\\'s invites you',\n    des: '不是所有的兼职汪都需要风吹日晒',\n  },\n  {\n    img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\n    title: 'Eat the week',\n    des: '不是所有的兼职汪都需要风吹日晒',\n  },\n];\nconst NUM_SECTIONS = 5;\nconst NUM_ROWS_PER_SECTION = 5;\nlet pageIndex = 0;\n\nconst dataBlobs = {};\nlet sectionIDs = [];\nlet rowIDs = [];\nfunction genData(pIndex = 0) {\n  for (let i = 0; i < NUM_SECTIONS; i++) {\n    const ii = (pIndex * NUM_SECTIONS) + i;\n    const sectionName = `Section ${ii}`;\n    sectionIDs.push(sectionName);\n    dataBlobs[sectionName] = sectionName;\n    rowIDs[ii] = [];\n\n    for (let jj = 0; jj < NUM_ROWS_PER_SECTION; jj++) {\n      const rowName = `S${ii}, R${jj}`;\n      rowIDs[ii].push(rowName);\n      dataBlobs[rowName] = rowName;\n    }\n  }\n  sectionIDs = [...sectionIDs];\n  rowIDs = [...rowIDs];\n}\n\n\nclass App extends React.Component {\n    constructor(props){\n      super(props);\n      const getSectionData = (dataBlob, sectionID) => dataBlob[sectionID];\n      const getRowData = (dataBlob, sectionID, rowID) => dataBlob[rowID];\n      const dataSource = new ListView.DataSource({\n        getRowData,\n        getSectionHeaderData: getSectionData,\n        rowHasChanged: (row1, row2) => row1 !== row2,\n        sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\n      });\n      this.state={\n        dataSource,\n        isLoading: true,\n        height: document.documentElement.clientHeight * 3 / 4,\n      }\n    }\n    componentDidMount(){\n      this.getListdata();\n\n      const hei = document.documentElement.clientHeight - ReactDOM.findDOMNode(this.lv).parentNode.offsetTop;\n      // simulate initial Ajax\n      setTimeout(() => {\n        genData();\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRowsAndSections(dataBlobs, sectionIDs, rowIDs),\n          isLoading: false,\n          height: hei,\n        });\n      }, 600);\n\n    }\n    getListdata(){\n      let thisUrl=api.index_list;\n      get(thisUrl,(res)=>{\n        console.log(res);\n      },(erro)=>{\n        console.log(erro);\n      })\n    }\n\n    onEndReached = (event) => {\n      // load new data\n      // hasMore: from backend data, indicates whether it is the last page, here is false\n      if (this.state.isLoading && !this.state.hasMore) {\n        return;\n      }\n      console.log('reach end', event);\n      this.setState({ isLoading: true });\n      setTimeout(() => {\n        genData(++pageIndex);\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRowsAndSections(dataBlobs, sectionIDs, rowIDs),\n          isLoading: false,\n        });\n      }, 1000);\n    }\n  \n    render() {\n      const { history,location }=this.props;\n      const pageProps={history,location};\n        return(\n          <div className=\"App\">\n            <SearchTop  {...pageProps}/>\n            <TabsTop activeid={0} {...pageProps}/>\n            <DropMenu {...pageProps}/>\n            {this.state.dataSource&&this.state.dataSource.length>0?<div>有数据</div>:<EmptyList/>}\n          </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}